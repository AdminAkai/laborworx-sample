{"version":3,"file":"static/js/297.7d657473.chunk.js","mappings":"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","sources":["hooks/redux.ts","redux/features/workerSlice/selectors.ts","images/SvgIcons/ExportIcon.tsx","components/SectionHeader/styledComponents.tsx","components/SectionHeader/SectionHeader.tsx","components/SectionHeader/index.ts","components/WorkHistoryTab/styledComponents.tsx","components/WorkHistoryTab/WorkHistoryTab.tsx","components/WorkHistoryTab/index.ts","components/WorkHistorySkeleton/styledComponents.tsx","components/WorkHistorySkeleton/WorkHistorySkeleton.tsx","components/WorkHistorySkeleton/index.ts","images/SvgIcons/LocationIcon.tsx","components/PersonalDetail/styledComponents.tsx","components/PersonalDetail/PersonalDetail.tsx","components/PersonalDetail/index.ts","components/SkillBadge/styledComponents.tsx","components/SkillBadge/SkillBadge.tsx","components/SkillBadge/index.ts","images/SvgIcons/EmailIcon.tsx","images/SvgIcons/MoneyIcon.tsx","images/SvgIcons/PhoneIcon.tsx","components/WorkerDetails/lib.tsx","components/WorkerDetails/styledComponents.tsx","components/WorkerDetails/index.ts","components/WorkerDetails/WorkerDetails.tsx","components/WorkerDetailsSkeleton/styledComponents.tsx","components/WorkerDetailsSkeleton/index.ts","components/WorkerDetailsSkeleton/WorkerDetailsSkeleton.tsx","components/WorkerExperienceItem/styledComponents.tsx","components/WorkerExperienceItem/index.ts","components/WorkerExperienceItem/WorkerExperienceItem.tsx","components/WorkerGenericItem/styledComponents.tsx","components/WorkerGenericItem/index.ts","components/WorkerGenericItem/WorkerGenericItem.tsx","components/WorkerExperience/styledComponents.tsx","components/WorkerExperience/index.ts","components/WorkerExperience/WorkerExperience.tsx","components/WorkerExperienceSkeleton/styledComponents.tsx","components/WorkerExperienceSkeleton/index.ts","components/WorkerExperienceSkeleton/WorkerExperienceSkeleton.tsx","components/WorkHistoryCard/styledComponents.tsx","components/WorkHistoryCard/index.ts","components/WorkHistoryCard/WorkHistoryCard.tsx","components/WorkHistory/styledComponents.tsx","components/WorkHistory/index.ts","components/WorkHistory/WorkHistory.tsx","components/ProfileMain/styledComponents.tsx","components/ProfileMain/index.ts","components/ProfileMain/ProfileMain.tsx","components/ProfileEditSection/styledComponents.tsx","components/ProfileEditSection/index.ts","components/ProfileEditSection/ProfileEditSection.tsx","components/ProfileAutocompleteInput/styledComponents.tsx","components/ProfileAutocompleteInput/index.ts","components/ProfileAutocompleteInput/ProfileAutocompleteInput.tsx","components/ProfileDetailInput/styledComponents.tsx","components/ProfileDetailInput/ProfileDetailInput.tsx","components/ProfileDetailInput/index.ts","components/AdditionalDetailsEdit/lib.ts","components/AdditionalDetailsEdit/styledComponents.tsx","components/AdditionalDetailsEdit/AdditionalDetailsEdit.tsx","components/AdditionalDetailsEdit/index.ts","components/DetailsEditButton/styledComponents.tsx","components/DetailsEditButton/index.ts","components/DetailsEditButton/DetailsEditButton.tsx","components/CertificationsEdit/styledComponents.tsx","components/CertificationsEdit/index.ts","components/CertificationsEdit/CertificationsEdit.tsx","components/DetailSkillInput/styledComponents.tsx","components/DetailSkillInput/DetailSkillInput.tsx","components/DetailSkillInput/index.ts","components/ProfileAddressInput/ProfileAddressInput.tsx","components/ProfileAddressInput/index.ts","utils/validationUtils.ts","components/GeneralDetailsEdit/lib.ts","components/GeneralDetailsEdit/styledComponents.tsx","components/GeneralDetailsEdit/GeneralDetailsEdit.tsx","components/GeneralDetailsEdit/index.ts","images/SvgIcons/TrashIcon.tsx","components/WorkerExperienceInput/lib.ts","components/WorkerExperienceInput/styledComponents.tsx","components/WorkerExperienceInput/WorkerExperienceInput.tsx","components/WorkerExperienceInput/index.ts","components/WorkerExperienceEdit/styledComponents.tsx","components/ProfileEdit/lib.ts","components/WorkerExperienceEdit/WorkerExperienceEdit.tsx","components/ProfileEdit/styledComponents.tsx","components/ProfileEdit/index.ts","components/ProfileEdit/ProfileEdit.tsx","containers/WorkerProfile/styledComponents.tsx","containers/WorkerProfile/WorkerProfile.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"../redux/store\";\r\n\r\n// Use throughout app instead of plain `useDispatch` and `useSelector`\r\ntype DispatchFunc = () => AppDispatch;\r\nexport const useAppDispatch: DispatchFunc = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nimport { ReadableWorkerJobTypes } from \"constants/workers\";\r\n\r\nconst selectWorkerSliceReducer = (state: any) => state.worker;\r\n\r\nconst formatLanguages = (workerLanguages: any) => {\r\n  let formattedLanguages = [];\r\n  workerLanguages.forEach((workerLanguage) => {\r\n    formattedLanguages.push(\r\n      `${workerLanguage.languageName}${workerLanguage.isPrimary ? \" (Primary)\" : \"\"}`\r\n    );\r\n  });\r\n  return formattedLanguages.sort();\r\n};\r\n\r\nexport const selectWorkerLoading = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.loading\r\n);\r\n\r\nexport const selectWorkerErrors = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.errors\r\n);\r\n\r\nexport const selectWorker = createSelector([selectWorkerSliceReducer], (state) => state.worker);\r\n\r\nexport const selectWorkerId = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.worker.id\r\n);\r\n\r\nexport const selectWorkerName = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => `${state.worker.firstName} ${state.worker.lastName}`\r\n);\r\n\r\nexport const selectWorkHistoryTab = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.workHistoryTab\r\n);\r\n\r\nexport const selectWorkHistories = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.workHistory\r\n);\r\n\r\nexport const selectWorkExperience = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.workerExperiences\r\n);\r\n\r\nexport const selectWorkerAdditionalDetailsDisplay = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => {\r\n    const formattedJobTypes = [];\r\n    const formattedDistanceToWork = [];\r\n    state.worker.workerPreference?.jobTypes?.forEach((jobType: any) => {\r\n      formattedJobTypes.push(ReadableWorkerJobTypes[jobType]);\r\n    });\r\n\r\n    formattedDistanceToWork.push(`${state.workerPreference.distanceToWork} miles`);\r\n\r\n    return [\r\n      { label: \"Job Types\", value: formattedJobTypes.join(\", \") },\r\n      { label: \"Willing to travel\", value: formattedDistanceToWork.join(\", \") }\r\n    ];\r\n  }\r\n);\r\n\r\nexport const selectWorkerLanguages = createSelector([selectWorkerSliceReducer], (state) =>\r\n  formatLanguages(state.workerLanguages).join(\", \")\r\n);\r\n\r\nexport const selectWorkerEditMode = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.workerEditMode\r\n);\r\n\r\nexport const selectWorkerAndUpdates = createSelector([selectWorkerSliceReducer], (state) => ({\r\n  workerId: state.worker.id,\r\n  updates: state.workerUpdates,\r\n  preferenceId: state.worker.workerPreference && state.worker.workerPreference.id,\r\n  workerPreference: state.workerPreference,\r\n  skillsToAdd: state.skillsToAdd,\r\n  skillsToDelete: state.skillsToDelete,\r\n  workerExperiences: state.workerExperiences,\r\n  workerExperiencesToDelete: state.workerExperiencesToDelete,\r\n  workerLanguages: state.workerLanguages\r\n}));\r\n\r\nexport const selectAllSkills = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.allSkills\r\n);\r\n\r\nexport const selectWorkerTrades = createSelector(\r\n  [selectWorkerSliceReducer],\r\n  (state) => state.workerTrades\r\n);\r\n\r\nexport const selectWorkerSkillsForInput = createSelector([selectWorkerSliceReducer], (state) => ({\r\n  oldWorkerSkills: state.worker.workerSkills.map((skill) => skill.skill.id),\r\n  currentWorkerSkills: state.workerSkills.map((skill) => skill.label)\r\n}));\r\n\r\nexport const selectAdditionalDetailsData = createSelector([selectWorkerSliceReducer], (state) => {\r\n  const distanceToWork = state.worker.workerPreference.distanceToWork;\r\n  return {\r\n    primaryLanguage: state.primaryLanguage,\r\n    additionalLanguages: state.additionalLanguages,\r\n    distanceToWork,\r\n    jobTypes: state.workerPreference.jobTypes,\r\n    primaryLanguageSelections: state.languageSelections,\r\n    additionalLanguageSelections: state.languageSelections.filter(\r\n      (language) => language !== state.primaryLanguage\r\n    )\r\n  };\r\n});\r\n","import { FC } from \"react\";\r\nimport { ISvgIconProps } from \"./svgType\";\r\n\r\nconst ExportIcon: FC<ISvgIconProps> = ({ color }) => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M10 0C15.5 0 20 4.5 20 10C20 15.5 15.5 20 10 20C4.5 20 0 15.5 0 10C0 4.5 4.5 0 10 0ZM6 15H14V13H6V15ZM14 8H11.5V4H8.5V8H6L10 12L14 8Z\"\r\n      fill={color || \"#0062A7\"}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ExportIcon;\r\n","import styled from \"styled-components\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const HeaderButton = styled(Button)<{ $workerEditMode: boolean }>`\r\n  && {\r\n    background-color: ${({ $workerEditMode }) =>\r\n      $workerEditMode ? themeColors.background.White : themeColors.Blue};\r\n    text-transform: none;\r\n    padding: 12px 24px;\r\n    margin-left: 24px;\r\n    color: ${({ $workerEditMode }) =>\r\n      $workerEditMode ? themeColors.Blue : themeColors.background.White};\r\n    ${textTheme.body.small.styledComponent};\r\n    border-color: ${themeColors.Blue};\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${themeColors.background.White};\r\n  height: 100px;\r\n  width: 100%;\r\n  border-bottom: solid 1px ${themeColors.border.Gray};\r\n  padding: 20px 75px;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const HeaderLeftSector = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  user-select: none;\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${textTheme.body.small.inlineStyle};\r\n`;\r\n\r\nexport const HeaderRightSector = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${textTheme.body.small.inlineStyle}\r\n`;\r\n","import { FC } from \"react\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nimport RecruiterIcon from \"images/SvgIcons/Recruiter\";\r\nimport ExportIcon from \"images/SvgIcons/ExportIcon\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport {\r\n  selectWorkerEditMode,\r\n  selectWorkerErrors,\r\n  selectWorkerLoading,\r\n  selectWorkerName\r\n} from \"redux/features/workerSlice/selectors\";\r\nimport { setWorkerEditMode, setWorkerLoading } from \"redux/features/workerSlice\";\r\nimport { updateWorkerDetailsStart } from \"redux/features/workerSlice/actions\";\r\n\r\nimport {\r\n  HeaderButton,\r\n  HeaderContainer,\r\n  HeaderLeftSector,\r\n  HeaderRightSector,\r\n  Subtitle\r\n} from \"./styledComponents\";\r\n\r\nconst SectionHeader: FC<{ loading: boolean }> = ({ loading }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const workerName = useAppSelector(selectWorkerName);\r\n  const workerEditMode = useAppSelector(selectWorkerEditMode);\r\n  const workerLoading = useAppSelector(selectWorkerLoading);\r\n  const workerErrors = useAppSelector(selectWorkerErrors);\r\n\r\n  const handleOnClick = () => {\r\n    if (!workerEditMode) {\r\n      dispatch(setWorkerEditMode(!workerEditMode));\r\n    } else {\r\n      dispatch(updateWorkerDetailsStart());\r\n    }\r\n  };\r\n\r\n  const handleSetLoading = () => {\r\n    if (workerLoading) {\r\n      dispatch(setWorkerLoading(false));\r\n    } else {\r\n      dispatch(setWorkerLoading(true));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeftSector>\r\n        <span\r\n          style={{\r\n            ...textTheme.headings.h1.inlineStyle\r\n          }}\r\n        >\r\n          Worker\r\n        </span>\r\n        <Subtitle>\r\n          <span\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              color: themeColors.text.Gray\r\n            }}\r\n          >\r\n            <RecruiterIcon width=\"13\" height=\"20\" />\r\n            <p style={{ marginLeft: \"8px\" }}>Workforce &nbsp;/&nbsp;</p>\r\n          </span>\r\n          &nbsp;\r\n          <span\r\n            style={{\r\n              color: workerEditMode ? themeColors.text.Gray : themeColors.Blue,\r\n              fontWeight: !workerEditMode && 600\r\n            }}\r\n          >\r\n            {loading ? <Skeleton width=\"88px\" height=\"24px\" /> : workerName}\r\n          </span>\r\n          {workerEditMode && (\r\n            <span style={{ color: themeColors.text.Gray }}>\r\n              &nbsp;&nbsp;/&nbsp;&nbsp;\r\n              <span style={{ color: themeColors.Blue, fontWeight: 600 }}>Edit Details</span>\r\n            </span>\r\n          )}\r\n        </Subtitle>\r\n      </HeaderLeftSector>\r\n      {!workerEditMode ? (\r\n        <HeaderButton\r\n          $workerEditMode={false}\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={handleSetLoading}\r\n        >\r\n          {workerLoading ? \"Remove Loading State\" : \"Enable Loading State\"}\r\n        </HeaderButton>\r\n      ) : null}\r\n      <HeaderRightSector>\r\n        <ExportIcon color={themeColors.text.Gray} />\r\n        <span style={{ marginLeft: \"8px\", userSelect: \"none\" }}>Export Resume</span>\r\n        <HeaderButton\r\n          $workerEditMode={workerEditMode}\r\n          variant={workerEditMode ? \"outlined\" : \"contained\"}\r\n          disableElevation\r\n          onClick={handleOnClick}\r\n          disabled={\r\n            loading ||\r\n            workerLoading ||\r\n            !isEmpty(Object.values(workerErrors).filter((value) => value))\r\n          }\r\n        >\r\n          {workerEditMode ? \"Save Details\" : \"Edit Details\"}\r\n        </HeaderButton>\r\n      </HeaderRightSector>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import SectionHeader from \"./SectionHeader\";\r\n\r\nexport default SectionHeader;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const tabSx = {\r\n  marginRight: \"12px\",\r\n  textTransform: \"none\",\r\n  color: themeColors.text.Gray,\r\n  ...textTheme.body.large.inlineStyle,\r\n  \"&.Mui-disabled\": {\r\n    color: themeColors.Blue\r\n  }\r\n};\r\n\r\nexport const WorkHistoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 40%;\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const WorkHistoryCardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 24px;\r\n`;\r\n","import { FC, memo } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { setWorkHistoryTab } from \"redux/features/workerSlice\";\r\n\r\nimport { selectWorkHistoryTab } from \"redux/features/workerSlice/selectors\";\r\nimport { tabSx } from \"./styledComponents\";\r\n\r\nconst WorkHistoryTab: FC<{ tab: string }> = ({ tab }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const workerHistoryTab = useAppSelector(selectWorkHistoryTab);\r\n\r\n  const handleOnClick = () => {\r\n    dispatch(setWorkHistoryTab(tab));\r\n  };\r\n\r\n  return (\r\n    <Button sx={tabSx} onClick={handleOnClick} disabled={tab === workerHistoryTab}>\r\n      {tab}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst memoizedWorkHistoryTab = memo(WorkHistoryTab);\r\n\r\nexport default memoizedWorkHistoryTab;\r\n","import WorkHistoryTab from \"./WorkHistoryTab\";\r\n\r\nexport default WorkHistoryTab;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WorkHistoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 40%;\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const WorkHistoryCardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 128px;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport WorkHistoryTab from \"components/WorkHistoryTab\";\r\n\r\nimport textTheme from \"theme/text\";\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nimport { workerHistoryTabs } from \"constants/workers\";\r\n\r\nimport { TabContainer, WorkHistoryCardContainer, WorkHistoryContainer } from \"./styledComponents\";\r\n\r\nconst WorkHistorySkeleton: FC = () => (\r\n  <WorkHistoryContainer>\r\n    <span style={{ ...textTheme.headings.h1.inlineStyle }}>Work History</span>\r\n    <TabContainer>\r\n      {workerHistoryTabs.map((tab) => (\r\n        <WorkHistoryTab key={tab} tab={tab} />\r\n      ))}\r\n    </TabContainer>\r\n    <WorkHistoryCardContainer>\r\n      <CircularProgress sx={{ color: themeColors.Blue }} size={96} />\r\n    </WorkHistoryCardContainer>\r\n  </WorkHistoryContainer>\r\n);\r\nexport default WorkHistorySkeleton;\r\n","import WorkHistorySkeleton from \"./WorkHistorySkeleton\";\r\n\r\nexport default WorkHistorySkeleton;\r\n","import { FC } from \"react\";\r\n\r\nimport { ISvgIconProps } from \"./svgType\";\r\n\r\nconst LocationIcon: FC<ISvgIconProps> = ({ style }) => (\r\n  <svg\r\n    width=\"14\"\r\n    height=\"20\"\r\n    viewBox=\"0 0 14 20\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    style={style}\r\n  >\r\n    <path\r\n      d=\"M7 9.5C6.33696 9.5 5.70107 9.23661 5.23223 8.76777C4.76339 8.29893 4.5 7.66304 4.5 7C4.5 6.33696 4.76339 5.70107 5.23223 5.23223C5.70107 4.76339 6.33696 4.5 7 4.5C7.66304 4.5 8.29893 4.76339 8.76777 5.23223C9.23661 5.70107 9.5 6.33696 9.5 7C9.5 7.3283 9.43534 7.65339 9.3097 7.95671C9.18406 8.26002 8.99991 8.53562 8.76777 8.76777C8.53562 8.99991 8.26002 9.18406 7.95671 9.3097C7.65339 9.43534 7.3283 9.5 7 9.5ZM7 0C5.14348 0 3.36301 0.737498 2.05025 2.05025C0.737498 3.36301 0 5.14348 0 7C0 12.25 7 20 7 20C7 20 14 12.25 14 7C14 5.14348 13.2625 3.36301 11.9497 2.05025C10.637 0.737498 8.85652 0 7 0Z\"\r\n      fill=\"#0062A7\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default LocationIcon;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nconst personalDetailCss = `\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const PersonalDetailItem = styled.div<{ marginTop?: string }>`\r\n  ${personalDetailCss}\r\n  margin-top: ${({ marginTop }) => marginTop || \"16px\"};\r\n`;\r\n\r\nexport const DetailIcon = styled.div`\r\n  ${personalDetailCss}\r\n  width: 45px;\r\n  height: 45px;\r\n  background-color: ${themeColors.background.Primary};\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const PersonalDetailInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { DetailIcon, PersonalDetailInfo, PersonalDetailItem } from \"./styledComponents\";\r\n\r\ninterface IPersonalDetailProps {\r\n  label: string;\r\n  Icon: any;\r\n  value: string;\r\n}\r\n\r\nconst PersonalDetail: FC<IPersonalDetailProps> = ({ label, Icon, value }) => {\r\n  return (\r\n    <PersonalDetailItem marginTop=\"16px\">\r\n      <DetailIcon>\r\n        <Icon />\r\n      </DetailIcon>\r\n      <PersonalDetailInfo>\r\n        <span style={{ ...textTheme.body.small.inlineStyle, color: themeColors.text.Gray }}>\r\n          {label}\r\n        </span>\r\n        <span style={{ ...textTheme.body.medium.inlineStyle, color: themeColors.text.Black }}>\r\n          {value}\r\n        </span>\r\n      </PersonalDetailInfo>\r\n    </PersonalDetailItem>\r\n  );\r\n};\r\n\r\nexport default PersonalDetail;\r\n","import PersonalDetail from \"./PersonalDetail\";\r\n\r\nexport default PersonalDetail;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const SkillBadgeContainer = styled.div`\r\n  background-color: ${themeColors.background.Primary};\r\n  color: ${themeColors.Blue};\r\n  ${textTheme.body.small.styledComponent};\r\n  padding: 6px 12px;\r\n  border-radius: 24px;\r\n  margin-right: 10px;\r\n  margin-top: 10px;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport { SkillBadgeContainer } from \"./styledComponents\";\r\n\r\ninterface ISkillBadgeProps {\r\n  skill: string;\r\n}\r\n\r\nconst SkillBadge: FC<ISkillBadgeProps> = ({ skill }) => (\r\n  <SkillBadgeContainer>{skill}</SkillBadgeContainer>\r\n);\r\n\r\nexport default SkillBadge;\r\n","import SkillBadge from \"./SkillBadge\";\r\n\r\nexport default SkillBadge;\r\n","import { FC } from \"react\";\r\n\r\nconst EmailIcon: FC = () => (\r\n  <svg width=\"18\" height=\"14\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M15.6667 3.66683L9.00008 7.8335L2.33341 3.66683V2.00016L9.00008 6.16683L15.6667 2.00016M15.6667 0.333496H2.33341C1.40841 0.333496 0.666748 1.07516 0.666748 2.00016V12.0002C0.666748 12.4422 0.842343 12.8661 1.1549 13.1787C1.46746 13.4912 1.89139 13.6668 2.33341 13.6668H15.6667C16.1088 13.6668 16.5327 13.4912 16.8453 13.1787C17.1578 12.8661 17.3334 12.4422 17.3334 12.0002V2.00016C17.3334 1.07516 16.5834 0.333496 15.6667 0.333496Z\"\r\n      fill=\"#8F9BB3\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default EmailIcon;\r\n","import { FC } from \"react\";\r\n\r\nconst MoneyIcon: FC = () => (\r\n  <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M5 1H15C16.4234 1 17.5331 1.35591 18.2848 2.0539C19.0297 2.74565 19.5 3.8453 19.5 5.5V12.5C19.5 14.1547 19.0297 15.2543 18.2848 15.9461C17.5331 16.6441 16.4234 17 15 17H5C3.57665 17 2.4669 16.6441 1.71523 15.9461C0.970257 15.2543 0.5 14.1547 0.5 12.5V5.5C0.5 3.8453 0.970257 2.74565 1.71523 2.0539C2.4669 1.35591 3.57665 1 5 1ZM3 15.25H6C6.68614 15.25 7.25 14.6861 7.25 14C7.25 13.3139 6.68614 12.75 6 12.75H3C2.31386 12.75 1.75 13.3139 1.75 14C1.75 14.6861 2.31386 15.25 3 15.25ZM6.5 9C6.5 10.9361 8.06386 12.5 10 12.5C11.9361 12.5 13.5 10.9361 13.5 9C13.5 7.06386 11.9361 5.5 10 5.5C8.06386 5.5 6.5 7.06386 6.5 9ZM14 5.25H17C17.6861 5.25 18.25 4.68614 18.25 4C18.25 3.31386 17.6861 2.75 17 2.75H14C13.3139 2.75 12.75 3.31386 12.75 4C12.75 4.68614 13.3139 5.25 14 5.25Z\"\r\n      fill=\"#8F9BB3\"\r\n      stroke=\"#8F9BB3\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default MoneyIcon;\r\n","import { FC } from \"react\";\r\n\r\nconst PhoneIcon: FC = () => (\r\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M4.02222 8.65556C5.62222 11.8 8.2 14.3778 11.3444 15.9778L13.7889 13.5333C14.1 13.2222 14.5333 13.1333 14.9222 13.2556C16.1667 13.6667 17.5 13.8889 18.8889 13.8889C19.1836 13.8889 19.4662 14.006 19.6746 14.2143C19.8829 14.4227 20 14.7053 20 15V18.8889C20 19.1836 19.8829 19.4662 19.6746 19.6746C19.4662 19.8829 19.1836 20 18.8889 20C13.8792 20 9.07478 18.0099 5.53243 14.4676C1.99007 10.9252 0 6.12076 0 1.11111C0 0.816426 0.117063 0.533811 0.325437 0.325437C0.533811 0.117063 0.816426 0 1.11111 0H5C5.29469 0 5.5773 0.117063 5.78567 0.325437C5.99405 0.533811 6.11111 0.816426 6.11111 1.11111C6.11111 2.5 6.33333 3.83333 6.74444 5.07778C6.86667 5.46667 6.77778 5.9 6.46667 6.21111L4.02222 8.65556Z\"\r\n      fill=\"#8F9BB3\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default PhoneIcon;\r\n","import { FC } from \"react\";\r\n\r\nimport RequestPageIcon from \"@mui/icons-material/RequestPage\";\r\n\r\nimport EmailIcon from \"images/SvgIcons/EmailIcon\";\r\nimport MoneyIcon from \"images/SvgIcons/MoneyIcon\";\r\nimport PhoneIcon from \"images/SvgIcons/PhoneIcon\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nimport { readablePhoneNumber } from \"utils/workerUtils\";\r\n\r\nimport { ReadableWorkerFields, readableTaxElections } from \"constants/workers\";\r\n\r\nexport const WorkerDetailsDisplay: Array<{\r\n  label: string;\r\n  Icon: FC;\r\n  workerKey: string;\r\n  value?: (worker: any) => any;\r\n}> = [\r\n  {\r\n    label: ReadableWorkerFields[\"desiredRate\"],\r\n    Icon: MoneyIcon,\r\n    workerKey: \"workerPreference\",\r\n    value: (worker) => `$${worker.workerPreference.desiredRate} / hr`\r\n  },\r\n  {\r\n    label: ReadableWorkerFields[\"emailAddress\"],\r\n    Icon: EmailIcon,\r\n    workerKey: \"emailAddress\",\r\n    value: (worker) => worker.emailAddress\r\n  },\r\n  {\r\n    label: ReadableWorkerFields[\"phoneNumber\"],\r\n    Icon: PhoneIcon,\r\n    workerKey: \"phoneNumber\",\r\n    value: (worker) => readablePhoneNumber(worker.phoneNumber)\r\n  },\r\n  {\r\n    label: ReadableWorkerFields[\"taxElection\"],\r\n    Icon: () => <RequestPageIcon sx={{ color: themeColors.text.Gray }} />,\r\n    workerKey: \"taxElection\",\r\n    value: (worker) => readableTaxElections[worker.taxElection]\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nconst workerDetailsCss = `\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WorkerDetailsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n  min-width: 300px;\r\n  width: 20%;\r\n  border-radius: 8px;\r\n  padding: 32px;\r\n  background-color: ${themeColors.background.White};\r\n`;\r\n\r\nexport const MainDetails = styled.div`\r\n  ${workerDetailsCss}\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const MainDetailTitle = styled.span`\r\n  ${textTheme.headings.h2.styledComponent}\r\n  margin-top: 12px;\r\n  color: ${themeColors.text.Black};\r\n`;\r\n\r\nexport const MainDetailSubtitle = styled(MainDetailTitle)`\r\n  color: ${themeColors.text.Gray};\r\n`;\r\n\r\nexport const AddressSection = styled.div`\r\n  ${workerDetailsCss}\r\n  margin-top: 12px;\r\n  width: 80%;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 80%;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const SectionHeader = styled.span`\r\n  ${textTheme.headings.h2.styledComponent};\r\n  color: ${themeColors.text.Black};\r\n  margin-top: 32px;\r\n`;\r\n\r\nexport const AddressBackground = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 8px;\r\n  background-color: ${themeColors.background.Primary};\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const SkillSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import WorkerDetails from \"./WorkerDetails\";\r\n\r\nexport default WorkerDetails;\r\n","import { FC } from \"react\";\r\n\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\n\r\nimport LocationIcon from \"images/SvgIcons/LocationIcon\";\r\n\r\nimport { useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectWorker, selectWorkerTrades } from \"redux/features/workerSlice/selectors\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport PersonalDetail from \"components/PersonalDetail\";\r\nimport SkillBadge from \"components/SkillBadge\";\r\n\r\nimport { WorkerDetailsDisplay } from \"./lib\";\r\nimport {\r\n  AddressBackground,\r\n  AddressSection,\r\n  MainDetailSubtitle,\r\n  MainDetailTitle,\r\n  MainDetails,\r\n  Section,\r\n  SectionHeader,\r\n  SkillSection,\r\n  WorkerDetailsContainer\r\n} from \"./styledComponents\";\r\n\r\nconst WorkerDetails: FC = () => {\r\n  const worker = useAppSelector(selectWorker);\r\n  const trades = useAppSelector(selectWorkerTrades);\r\n\r\n  const renderPersonalDetail = WorkerDetailsDisplay.map((detail) => (\r\n    <PersonalDetail\r\n      key={detail.workerKey}\r\n      Icon={detail.Icon}\r\n      label={detail.label}\r\n      value={worker[detail.workerKey] && detail.value(worker)}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <WorkerDetailsContainer>\r\n      <MainDetails>\r\n        <AccountCircleIcon sx={{ width: \"80px\", height: \"80px\", color: themeColors.text.Gray }} />\r\n        <MainDetailTitle>\r\n          {worker.firstName} {worker.lastName}\r\n        </MainDetailTitle>\r\n        <MainDetailSubtitle\r\n          style={{\r\n            ...textTheme.headings.h2.inlineStyle,\r\n            color: themeColors.text.Gray,\r\n            marginTop: \"12px\"\r\n          }}\r\n        >\r\n          {trades.map((trade) => trade.tradeName).join(\", \")}\r\n        </MainDetailSubtitle>\r\n      </MainDetails>\r\n      <AddressSection>\r\n        <AddressBackground>\r\n          <LocationIcon style={{ width: \"24px\", height: \"24px\" }} />\r\n          <span\r\n            style={{\r\n              ...textTheme.body.medium.inlineStyle,\r\n              color: themeColors.text.Black,\r\n              marginLeft: \"8px\"\r\n            }}\r\n          >\r\n            {worker.formattedAddress}\r\n          </span>\r\n        </AddressBackground>\r\n      </AddressSection>\r\n      <Section>\r\n        <SectionHeader>Personal Details</SectionHeader>\r\n        {renderPersonalDetail}\r\n      </Section>\r\n      <Section>\r\n        <SectionHeader>Skills</SectionHeader>\r\n        <SkillSection>\r\n          {worker.workerSkills.map((workerSkill) => (\r\n            <SkillBadge key={workerSkill.id} skill={workerSkill.skill.skillName} />\r\n          ))}\r\n        </SkillSection>\r\n      </Section>\r\n    </WorkerDetailsContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerDetails;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nconst workerDetailsCss = `\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const WorkerDetailsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n  max-width: 20%;\r\n  border-radius: 8px;\r\n  padding: 32px;\r\n  background-color: ${themeColors.background.White};\r\n`;\r\n\r\nexport const MainDetails = styled.div`\r\n  ${workerDetailsCss}\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const AddressSection = styled.div`\r\n  ${workerDetailsCss}\r\n  width: 240px;\r\n  height: 58px;\r\n  margin-top: 12px;\r\n`;\r\n\r\nexport const AddressBackground = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 8px;\r\n  background-color: ${themeColors.background.Primary};\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 80%;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const SectionHeader = styled.span`\r\n  ${textTheme.headings.h2.styledComponent};\r\n  color: ${themeColors.text.Black};\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const SkillSection = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import WorkerDetailsSkeleton from \"./WorkerDetailsSkeleton\";\r\n\r\nexport default WorkerDetailsSkeleton;\r\n","import { FC } from \"react\";\r\n\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nimport LocationIcon from \"images/SvgIcons/LocationIcon\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport {\r\n  AddressBackground,\r\n  AddressSection,\r\n  MainDetails,\r\n  Section,\r\n  SectionHeader,\r\n  SkillSection,\r\n  WorkerDetailsContainer\r\n} from \"./styledComponents\";\r\n\r\nconst WorkerDetailsSkeleton: FC = () => {\r\n  const renderPersonalDetailSkeletons = [null, null, null, null].map((_, i) => (\r\n    <Skeleton key={`null-${i}`} variant=\"text\" width=\"100%\" />\r\n  ));\r\n\r\n  const renderSkillBadgeSkeletons = [null, null, null].map((_, i) => (\r\n    <Skeleton\r\n      key={`null-${i}`}\r\n      sx={{ borderRadius: \"24px\", marginRight: \"8px\", marginTop: \"16px\" }}\r\n      variant=\"rounded\"\r\n      width=\"74px\"\r\n      height=\"30px\"\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <WorkerDetailsContainer>\r\n      <MainDetails>\r\n        <Skeleton variant=\"circular\" width=\"80px\" height=\"80px\" />\r\n        <span\r\n          style={{\r\n            ...textTheme.headings.h2.inlineStyle,\r\n            marginTop: \"8px\",\r\n            color: themeColors.text.Black\r\n          }}\r\n        >\r\n          <Skeleton variant=\"text\" width=\"108px\" height=\"24px\" />\r\n        </span>\r\n        <span\r\n          style={{\r\n            ...textTheme.headings.h2.inlineStyle,\r\n            color: themeColors.text.Gray,\r\n            marginTop: \"16px\"\r\n          }}\r\n        >\r\n          <Skeleton variant=\"text\" width=\"176px\" height=\"24px\" />\r\n        </span>\r\n      </MainDetails>\r\n      <AddressSection>\r\n        <AddressBackground>\r\n          <LocationIcon style={{ width: \"24px\", height: \"24px\" }} />\r\n          <span\r\n            style={{\r\n              ...textTheme.body.medium.inlineStyle,\r\n              color: themeColors.text.Black,\r\n              marginLeft: \"8px\"\r\n            }}\r\n          >\r\n            <Skeleton variant=\"text\" width=\"176px\" height=\"56px\" />\r\n          </span>\r\n        </AddressBackground>\r\n      </AddressSection>\r\n      <Section>\r\n        <SectionHeader>Personal Details</SectionHeader>\r\n        {renderPersonalDetailSkeletons}\r\n      </Section>\r\n      <Section>\r\n        <SectionHeader>Skills</SectionHeader>\r\n        <SkillSection>{renderSkillBadgeSkeletons}</SkillSection>\r\n      </Section>\r\n    </WorkerDetailsContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerDetailsSkeleton;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nexport const WorkerExperienceItemContainer = styled.div<{ last?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  border-bottom: ${({ last }) => (last ? \"none\" : `1px solid ${themeColors.border.Gray}`)};\r\n  margin-bottom: ${({ last }) => (last ? \"0\" : \"16px\")};\r\n`;\r\n\r\nexport const LeftSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n","import WorkerExperienceItem from \"./WorkerExperienceItem\";\r\n\r\nexport default WorkerExperienceItem;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { LeftSection, WorkerExperienceItemContainer } from \"./styledComponents\";\r\n\r\ninterface IWorkerExperienceItemProps {\r\n  employer: string;\r\n  position: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  last: boolean;\r\n}\r\n\r\nconst WorkerExperienceItem: FC<IWorkerExperienceItemProps> = ({\r\n  employer,\r\n  position,\r\n  startDate,\r\n  endDate,\r\n  last\r\n}) => {\r\n  return (\r\n    <WorkerExperienceItemContainer last={last}>\r\n      <LeftSection>\r\n        <span style={{ ...textTheme.body.small.inlineStyle, color: themeColors.text.Gray }}>\r\n          {employer}\r\n        </span>\r\n        <span style={{ ...textTheme.body.medium.inlineStyle, color: themeColors.text.Black }}>\r\n          {position}\r\n        </span>\r\n      </LeftSection>\r\n      <span style={{ ...textTheme.body.small.inlineStyle, color: themeColors.Blue }}>\r\n        {new Date(startDate).toLocaleString(\"en-us\", { month: \"short\", year: \"numeric\" })} -&nbsp;\r\n        {new Date(endDate).toLocaleString(\"en-us\", { month: \"short\", year: \"numeric\" })}\r\n      </span>\r\n    </WorkerExperienceItemContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerExperienceItem;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nexport const WorkerGenericItemContainer = styled.div<{ last?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n  padding-bottom: 16px;\r\n  border-bottom: ${({ last }) => (last ? \"none\" : `1px solid ${themeColors.border.Gray}`)};\r\n  margin-bottom: ${({ last }) => (last ? \"0\" : \"16px\")};\r\n`;\r\n","import WorkerGenericItem from \"./WorkerGenericItem\";\r\n\r\nexport default WorkerGenericItem;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { WorkerGenericItemContainer } from \"./styledComponents\";\r\n\r\ninterface IWorkerGenericItemProps {\r\n  detailTitle: string;\r\n  detailSubtitle: string;\r\n  last: boolean;\r\n}\r\n\r\nconst WorkerGenericItem: FC<IWorkerGenericItemProps> = ({ detailTitle, detailSubtitle, last }) => {\r\n  return (\r\n    <WorkerGenericItemContainer last={last}>\r\n      <span style={{ ...textTheme.body.medium.inlineStyle, color: themeColors.text.Black }}>\r\n        {detailTitle}\r\n      </span>\r\n      <span style={{ ...textTheme.body.small.inlineStyle, color: themeColors.text.Gray }}>\r\n        {detailSubtitle}\r\n      </span>\r\n    </WorkerGenericItemContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerGenericItem;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nconst flexDefault = `\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const WorkerExperienceContainer = styled.div`\r\n  ${flexDefault}\r\n  height: 100%;\r\n  min-width: 420px;\r\n  width: 30%;\r\n  border-radius: 8px;\r\n  padding: 32px;\r\n  background-color: ${themeColors.background.White};\r\n`;\r\n\r\nexport const SectionHeader = styled.span`\r\n  ${textTheme.headings.h2.styledComponent}\r\n`;\r\n\r\nexport const SectionSubHeader = styled.span`\r\n  ${textTheme.body.medium.styledComponent}\r\n`;\r\n\r\nexport const ItemsSection = styled.div`\r\n  ${flexDefault}\r\n  margin-top: 24px;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`;\r\n","import WorkerExperience from \"./WorkerExperience\";\r\n\r\nexport default WorkerExperience;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { useAppSelector } from \"hooks/redux\";\r\n\r\nimport {\r\n  selectWorkExperience,\r\n  selectWorkerAdditionalDetailsDisplay,\r\n  selectWorkerLanguages\r\n} from \"redux/features/workerSlice/selectors\";\r\n\r\nimport WorkerExperienceItem from \"components/WorkerExperienceItem\";\r\nimport WorkerGenericItem from \"components/WorkerGenericItem\";\r\n\r\nimport {\r\n  WorkerExperienceContainer,\r\n  ItemsSection,\r\n  SectionHeader,\r\n  SectionSubHeader\r\n} from \"./styledComponents\";\r\n\r\nconst WorkerExperience: FC = () => {\r\n  const workerExperiences = useAppSelector(selectWorkExperience);\r\n  const workerAdditionalDetails = useAppSelector(selectWorkerAdditionalDetailsDisplay);\r\n  const workerLanguages = useAppSelector(selectWorkerLanguages);\r\n\r\n  return (\r\n    <WorkerExperienceContainer>\r\n      <SectionHeader>Work Experience</SectionHeader>\r\n      <ItemsSection>\r\n        {workerExperiences.length !== 0 ? (\r\n          workerExperiences.map((workerExperience, i) => (\r\n            <WorkerExperienceItem\r\n              key={workerExperience.id}\r\n              {...workerExperience}\r\n              last={i === workerExperiences.length - 1}\r\n            />\r\n          ))\r\n        ) : (\r\n          <SectionSubHeader>N/A</SectionSubHeader>\r\n        )}\r\n      </ItemsSection>\r\n      <SectionHeader>Certifications</SectionHeader>\r\n      <ItemsSection>\r\n        <SectionSubHeader>N/A</SectionSubHeader>\r\n      </ItemsSection>\r\n      <SectionHeader>Languages</SectionHeader>\r\n      <ItemsSection>\r\n        <SectionSubHeader>{workerLanguages ? workerLanguages : \"N/A\"}</SectionSubHeader>\r\n      </ItemsSection>\r\n      <SectionHeader>Additional Details</SectionHeader>\r\n      <ItemsSection>\r\n        {workerAdditionalDetails ? (\r\n          workerAdditionalDetails.map((detail, i) => (\r\n            <WorkerGenericItem\r\n              key={`${detail.label}-${i}`}\r\n              detailTitle={detail.label}\r\n              detailSubtitle={detail.value}\r\n              last={i === workerAdditionalDetails.length - 1}\r\n            />\r\n          ))\r\n        ) : (\r\n          <SectionSubHeader>N/A</SectionSubHeader>\r\n        )}\r\n      </ItemsSection>\r\n    </WorkerExperienceContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerExperience;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nconst flexDefault = `\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const WorkerExperienceContainer = styled.div`\r\n  ${flexDefault}\r\n  height: 100%;\r\n  width: 30%;\r\n  border-radius: 8px;\r\n  padding: 32px;\r\n  background-color: ${themeColors.background.White};\r\n`;\r\n\r\nexport const SectionHeader = styled.span`\r\n  ${textTheme.headings.h2.styledComponent}\r\n`;\r\n\r\nexport const ItemsSection = styled.div`\r\n  ${flexDefault}\r\n  margin-top: 24px;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`;\r\n","import WorkerExperienceSkeleton from \"./WorkerExperienceSkeleton\";\r\n\r\nexport default WorkerExperienceSkeleton;\r\n","import React, { FC } from \"react\";\r\n\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nimport { WorkerExperienceContainer, ItemsSection, SectionHeader } from \"./styledComponents\";\r\n\r\nconst WorkerExperienceSkeleton: FC = () => {\r\n  return (\r\n    <WorkerExperienceContainer>\r\n      <SectionHeader>Work Experience</SectionHeader>\r\n      <ItemsSection>\r\n        <Skeleton width=\"100%\" height=\"45px\" />\r\n      </ItemsSection>\r\n      <SectionHeader>Certifications</SectionHeader>\r\n      <ItemsSection>\r\n        <Skeleton width=\"100%\" height=\"45px\" />\r\n      </ItemsSection>\r\n      <SectionHeader>Languages</SectionHeader>\r\n      <ItemsSection>\r\n        <Skeleton width=\"100%\" height=\"45px\" />\r\n      </ItemsSection>\r\n      <SectionHeader>Additional Details</SectionHeader>\r\n      <ItemsSection>\r\n        <Skeleton width=\"100%\" height=\"45px\" />\r\n      </ItemsSection>\r\n    </WorkerExperienceContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerExperienceSkeleton;\r\n","import styled from \"styled-components\";\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const WorkHistoryCardContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: ${themeColors.background.White};\r\n  border-radius: 8px;\r\n  height: 150px;\r\n  padding: 24px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const LeftSector = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const StatusRoleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ActiveStatusBadge = styled.div<{ isActive?: boolean }>`\r\n  background-color: ${({ isActive }) =>\r\n    isActive ? themeColors.background.Green : themeColors.background.Red};\r\n  color: ${({ isActive }) => (isActive ? themeColors.Green : themeColors.Red)};\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  margin-right: 16px;\r\n  ${textTheme.body.small.styledComponent};\r\n`;\r\n\r\nexport const SubtitleOne = styled.div`\r\n  ${textTheme.body.small.styledComponent};\r\n  color: ${themeColors.Blue};\r\n  margin-top: 8px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const SubtitleTwo = styled(SubtitleOne)`\r\n  color: ${themeColors.text.Black};\r\n`;\r\n","import WorkHistoryCard from \"./WorkHistoryCard\";\r\n\r\nexport default WorkHistoryCard;\r\n","import { FC } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport {\r\n  ActiveStatusBadge,\r\n  LeftSector,\r\n  StatusRoleContainer,\r\n  SubtitleOne,\r\n  SubtitleTwo,\r\n  WorkHistoryCardContainer\r\n} from \"./styledComponents\";\r\n\r\ninterface IWorkHistoryCardProps {\r\n  isActive?: boolean;\r\n  skill: string;\r\n  jobName: string;\r\n  jobLength: string;\r\n  jobId: string;\r\n}\r\n\r\nconst WorkHistoryCard: FC<IWorkHistoryCardProps> = ({\r\n  isActive,\r\n  skill,\r\n  jobName,\r\n  jobLength,\r\n  jobId\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleOnClick = () => {\r\n    navigate(`/jobs/${jobId}`);\r\n  };\r\n\r\n  return (\r\n    <WorkHistoryCardContainer>\r\n      <LeftSector>\r\n        <StatusRoleContainer>\r\n          <ActiveStatusBadge isActive={isActive}>\r\n            {isActive ? \"Active on Job\" : \"Not Active on Job\"}\r\n          </ActiveStatusBadge>\r\n          <span\r\n            style={{\r\n              color: themeColors.text.Black,\r\n              opacity: \"90%\",\r\n              ...textTheme.body.medium.inlineStyle\r\n            }}\r\n          >\r\n            {skill}\r\n          </span>\r\n        </StatusRoleContainer>\r\n        <SubtitleOne>{jobName}</SubtitleOne>\r\n        <SubtitleTwo>{jobLength}</SubtitleTwo>\r\n      </LeftSector>\r\n      <Button\r\n        variant=\"contained\"\r\n        disableElevation\r\n        sx={{\r\n          backgroundColor: themeColors.Blue,\r\n          textTransform: \"none\",\r\n          px: \"24px\",\r\n          py: \"12px\",\r\n          ...textTheme.body.small.inlineStyle\r\n        }}\r\n        onClick={handleOnClick}\r\n      >\r\n        Job Details\r\n      </Button>\r\n    </WorkHistoryCardContainer>\r\n  );\r\n};\r\n\r\nexport default WorkHistoryCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WorkHistoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  min-width: 520px;\r\n  width: 40%;\r\n`;\r\n\r\nexport const TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const WorkHistoryCardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 24px;\r\n`;\r\n","import WorkHistory from \"./WorkHistory\";\r\n\r\nexport default WorkHistory;\r\n","import { FC } from \"react\";\r\n\r\nimport { useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectWorkHistories } from \"redux/features/workerSlice/selectors\";\r\n\r\nimport WorkHistoryCard from \"components/WorkHistoryCard\";\r\nimport WorkHistoryTab from \"components/WorkHistoryTab\";\r\n\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { workerHistoryTabs } from \"constants/workers\";\r\n\r\nimport { TabContainer, WorkHistoryCardContainer, WorkHistoryContainer } from \"./styledComponents\";\r\n\r\nconst WorkHistory: FC = () => {\r\n  const workHistories = useAppSelector(selectWorkHistories);\r\n\r\n  return (\r\n    <WorkHistoryContainer>\r\n      <span style={{ ...textTheme.headings.h1.inlineStyle }}>Work History</span>\r\n      <TabContainer>\r\n        {workerHistoryTabs.map((tab) => (\r\n          <WorkHistoryTab key={tab} tab={tab} />\r\n        ))}\r\n      </TabContainer>\r\n      <WorkHistoryCardContainer>\r\n        {workHistories.map((workHistory) => (\r\n          <WorkHistoryCard key={workHistory.id} {...workHistory} />\r\n        ))}\r\n      </WorkHistoryCardContainer>\r\n    </WorkHistoryContainer>\r\n  );\r\n};\r\n\r\nexport default WorkHistory;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nexport const MainSector = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 25px 75px;\r\n  background-color: ${themeColors.background.Primary};\r\n`;\r\n","import ProfileMain from \"./ProfileMain\";\r\n\r\nexport default ProfileMain;\r\n","import { FC } from \"react\";\r\n\r\nimport WorkHistorySkeleton from \"components/WorkHistorySkeleton\";\r\nimport WorkerDetails from \"components/WorkerDetails\";\r\nimport WorkerDetailsSkeleton from \"components/WorkerDetailsSkeleton\";\r\nimport WorkerExperience from \"components/WorkerExperience\";\r\nimport WorkerExperienceSkeleton from \"components/WorkerExperienceSkeleton\";\r\nimport WorkHistory from \"components/WorkHistory\";\r\n\r\nimport { MainSector } from \"./styledComponents\";\r\n\r\nconst ProfileMain: FC<{ loading: boolean }> = ({ loading }) => (\r\n  <MainSector>\r\n    {loading ? <WorkerDetailsSkeleton /> : <WorkerDetails />}\r\n    {loading ? <WorkHistorySkeleton /> : <WorkHistory />}\r\n    {loading ? <WorkerExperienceSkeleton /> : <WorkerExperience />}\r\n  </MainSector>\r\n);\r\n\r\nexport default ProfileMain;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const HeaderButtonSx = {\r\n  backgroundColor: themeColors.Blue,\r\n  textTransform: \"none\",\r\n  padding: \"12px 24px\",\r\n  ...textTheme.body.small.inlineStyle,\r\n  fontWeight: 400,\r\n  marginLeft: \"24px\"\r\n};\r\n\r\nexport const Section = styled.div<{ isOpen?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  background-color: ${themeColors.background.White};\r\n  width: 100%;\r\n  border-radius: 8px 2px 2px 8px;\r\n  padding: 24px;\r\n  border-right: ${({ isOpen }) =>\r\n    isOpen ? `5px solid ${themeColors.background.White}` : `5px solid ${themeColors.Blue}`};\r\n  transition: border-right 0.3s ease-in-out;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CustomAccordion = styled.div<{ isOpen?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-height: ${({ isOpen }) => (isOpen ? \"1000px\" : \"0px\")};\r\n  overflow: hidden;\r\n  transition: max-height 0.3s ease-in-out;\r\n`;\r\n","import ProfileEditSection from \"./ProfileEditSection\";\r\n\r\nexport default ProfileEditSection;\r\n","import { Dispatch, FC, MouseEventHandler, PropsWithChildren, SetStateAction } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectWorkerLoading } from \"redux/features/workerSlice/selectors\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { Section, Header, HeaderButtonSx, CustomAccordion } from \"./styledComponents\";\r\n\r\ninterface IProfileEditSectionProps extends PropsWithChildren {\r\n  title: string;\r\n  detailNumber: number;\r\n  openNumber: number;\r\n  setOpenNumber: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst ProfileEditSection: FC<IProfileEditSectionProps> = ({\r\n  children,\r\n  title,\r\n  detailNumber,\r\n  openNumber,\r\n  setOpenNumber\r\n}) => {\r\n  const workerLoading = useAppSelector(selectWorkerLoading);\r\n\r\n  const open = openNumber === detailNumber;\r\n\r\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = () => {\r\n    setOpenNumber(detailNumber);\r\n  };\r\n\r\n  return (\r\n    <Section isOpen={open}>\r\n      <Header>\r\n        <span\r\n          style={{\r\n            color: themeColors.text.Black,\r\n            ...textTheme.headings.h1.inlineStyle,\r\n            userSelect: \"none\"\r\n          }}\r\n        >\r\n          {title}\r\n        </span>\r\n        {!open && (\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            sx={HeaderButtonSx}\r\n            onClick={handleOnClick}\r\n            disabled={workerLoading}\r\n          >\r\n            Edit\r\n          </Button>\r\n        )}\r\n      </Header>\r\n      <CustomAccordion isOpen={open}>{children}</CustomAccordion>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ProfileEditSection;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const AutocompleteInput = styled.div<{ detailNumber }>`\r\n  grid-area: \"input${({ detailNumber }) => detailNumber}\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  align-items: start;\r\n  width: 100%;\r\n  padding-right: 24px;\r\n`;\r\n\r\nexport const CustomSelectLabel = styled.label`\r\n  color: ${themeColors.text.Gray};\r\n  ${textTheme.body.small.styledComponent};\r\n  margin-bottom: 8px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const autocompleteSx = {\r\n  \"& .MuiInputBase-root\": {\r\n    padding: \"8px 16px\",\r\n    borderRadius: \"8px\",\r\n    minHeight: \"54px\",\r\n    backgroundColor: themeColors.background.Primary,\r\n    ...textTheme.body.medium.inlineStyle\r\n  },\r\n  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n    border: \"none\"\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n    outline: `${themeColors.Blue} solid 2px`,\r\n    outlineOffset: \"-2px\"\r\n  }\r\n};\r\n\r\nexport const chipSx = {\r\n  backgroundColor: themeColors.Blue,\r\n  color: themeColors.background.White,\r\n  marginRight: \"24px\",\r\n  \"& .MuiChip-deleteIcon\": {\r\n    color: themeColors.background.White\r\n  }\r\n};\r\n\r\nexport const textFieldSx = {\r\n  input: {\r\n    color: themeColors.text.Black,\r\n    \"&::placeholder\": { opacity: 1 }\r\n  }\r\n};\r\n","import ProfileAutocompleteInput from \"./ProfileAutocompleteInput\";\r\n\r\nexport default ProfileAutocompleteInput;\r\n","import { ChangeEvent, FC, useState } from \"react\";\r\n\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport textTheme from \"theme/text\";\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nimport {\r\n  AutocompleteInput,\r\n  CustomSelectLabel,\r\n  autocompleteSx,\r\n  chipSx,\r\n  textFieldSx\r\n} from \"./styledComponents\";\r\n\r\ninterface IProfileAutocompleteInputProps {\r\n  label?: string;\r\n  name?: string;\r\n  detailNumber?: number;\r\n  options: string[];\r\n  onChange: any;\r\n  onDelete: any;\r\n  values: string[];\r\n  placeholder: string;\r\n  validationSchema?: any;\r\n  multiple?: boolean;\r\n  disableClearable?: boolean;\r\n  forcePopupIcon?: boolean;\r\n  filterOptions?: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ProfileAutocompleteInput: FC<IProfileAutocompleteInputProps> = ({\r\n  label,\r\n  name,\r\n  detailNumber,\r\n  options,\r\n  onChange,\r\n  onDelete,\r\n  values,\r\n  placeholder,\r\n  validationSchema,\r\n  multiple,\r\n  disableClearable,\r\n  forcePopupIcon,\r\n  filterOptions,\r\n  disabled\r\n}) => {\r\n  const [input, setInput] = useState<any>(values);\r\n  const [error, setError] = useState<any>(\"\");\r\n\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>, value: string, reason: string) => {\r\n    if (reason !== \"removeOption\") {\r\n      onChange({ e, name, setError, setInput, validationSchema, newValue: value });\r\n    }\r\n  };\r\n\r\n  const handleOnDelete = (option: string) => {\r\n    setInput((prev) => {\r\n      const newValues = Array.isArray(prev) ? prev.filter((item) => item !== option) : prev;\r\n      onDelete({ option, newValues, name, setError });\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AutocompleteInput detailNumber={detailNumber}>\r\n      {label && <CustomSelectLabel>{label}</CustomSelectLabel>}\r\n      <Autocomplete\r\n        disabled={disabled}\r\n        disableClearable={disableClearable}\r\n        multiple={multiple}\r\n        slotProps={{\r\n          paper: {\r\n            sx: {\r\n              px: \"8px\",\r\n              ...textTheme.body.medium.inlineStyle\r\n            }\r\n          }\r\n        }}\r\n        forcePopupIcon={forcePopupIcon}\r\n        sx={autocompleteSx}\r\n        filterOptions={filterOptions}\r\n        filterSelectedOptions\r\n        renderTags={() =>\r\n          values.map((value, index) => (\r\n            <Chip\r\n              key={`${value}-${index}-${name}`}\r\n              variant=\"filled\"\r\n              label={value}\r\n              sx={chipSx}\r\n              onDelete={() => handleOnDelete(value)}\r\n            />\r\n          ))\r\n        }\r\n        id={`${name}-option-autocomplete`}\r\n        options={options}\r\n        fullWidth\r\n        onChange={handleOnChange}\r\n        value={input}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            sx={textFieldSx}\r\n            placeholder={placeholder}\r\n            error={Boolean(error)}\r\n          />\r\n        )}\r\n      />\r\n      {error && (\r\n        <span style={{ color: themeColors.Red, ...textTheme.body.small.inlineStyle }}>\r\n          *{error}\r\n        </span>\r\n      )}\r\n    </AutocompleteInput>\r\n  );\r\n};\r\n\r\nexport default ProfileAutocompleteInput;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const DetailInput = styled.div<{ detailNumber }>`\r\n  grid-area: \"input${({ detailNumber }) => detailNumber}\";\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  align-items: start;\r\n  width: 100%;\r\n  padding-right: 24px;\r\n`;\r\n\r\nexport const CustomInputLabel = styled.label<{ error?: boolean }>`\r\n  color: ${({ error }) => (error ? themeColors.Red : themeColors.text.Gray)};\r\n  ${textTheme.body.small.styledComponent};\r\n  margin-bottom: 8px;\r\n  user-select: none;\r\n`;\r\n\r\nexport const CustomInput = styled.input<{ currency?: boolean }>`\r\n  width: 100%;\r\n  height: 54px;\r\n  border-radius: 8px;\r\n  background-color: ${themeColors.background.Primary};\r\n  border: none;\r\n  color: ${themeColors.text.Black};\r\n  padding: 16px 16px 16px ${({ currency }) => (currency ? \"20px\" : \"16px\")};\r\n  ${textTheme.body.medium.styledComponent};\r\n\r\n  &:focus {\r\n    outline: ${themeColors.Blue} solid 2px;\r\n    outline-offset: -2px;\r\n  }\r\n`;\r\n\r\nexport const CustomAdornment = styled.span`\r\n  user-select: none;\r\n  position: absolute;\r\n  left: 8px;\r\n  top: 15px;\r\n`;\r\n\r\nexport const UnitOfMeasurement = styled.span`\r\n  user-select: none;\r\n  position: absolute;\r\n  left: 48px;\r\n  top: 17px;\r\n  ${textTheme.body.medium.styledComponent};\r\n`;\r\n","import { ChangeEventHandler, FC, memo, useState } from \"react\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nimport { IProfileInputProps } from \"types/workers\";\r\n\r\nimport {\r\n  CustomAdornment,\r\n  CustomInput,\r\n  CustomInputLabel,\r\n  DetailInput,\r\n  UnitOfMeasurement\r\n} from \"./styledComponents\";\r\n\r\ninterface IProfileDetailInputProps extends IProfileInputProps {\r\n  unitOfMeasurement?: string;\r\n  disabled?: boolean;\r\n  min?: number | string;\r\n  max?: number | string;\r\n}\r\n\r\nconst ProfileDetailInput: FC<IProfileDetailInputProps> = ({\r\n  detailNumber,\r\n  label,\r\n  name,\r\n  type,\r\n  onChange,\r\n  value,\r\n  customError,\r\n  validationSchema,\r\n  unitOfMeasurement,\r\n  disabled,\r\n  min,\r\n  max\r\n}) => {\r\n  const [input, setInput] = useState<string>(value);\r\n  const [error, setError] = useState<any>(customError || \"\");\r\n\r\n  const handleOnChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    onChange({ e, name, setError, setInput, validationSchema });\r\n  };\r\n\r\n  return (\r\n    <DetailInput detailNumber={detailNumber}>\r\n      <CustomInputLabel htmlFor={name} error={Boolean(error)}>\r\n        {label}\r\n      </CustomInputLabel>\r\n      <div style={{ position: \"relative\", width: \"100%\" }}>\r\n        {type === \"number\" && name === \"desiredRate\" && <CustomAdornment>$</CustomAdornment>}\r\n        {unitOfMeasurement && <UnitOfMeasurement>{unitOfMeasurement}</UnitOfMeasurement>}\r\n        <CustomInput\r\n          name={name}\r\n          disabled={disabled}\r\n          type={type || \"text\"}\r\n          currency={type === \"number\"}\r\n          value={input}\r\n          onChange={handleOnChange}\r\n          maxLength={name === \"phoneNumber\" ? 12 : undefined}\r\n          min={min ? min : undefined}\r\n          max={max ? max : undefined}\r\n        />\r\n      </div>\r\n      {error && (\r\n        <span style={{ color: themeColors.Red, ...textTheme.body.small.inlineStyle }}>\r\n          *{error}\r\n        </span>\r\n      )}\r\n    </DetailInput>\r\n  );\r\n};\r\n\r\nconst memoizedProfileDetailInput = memo(ProfileDetailInput);\r\n\r\nexport default memoizedProfileDetailInput;\r\n","import ProfileDetailInput from \"./ProfileDetailInput\";\r\n\r\nexport default ProfileDetailInput;\r\n","import ProfileAutocompleteInput from \"components/ProfileAutocompleteInput\";\r\nimport ProfileDetailInput from \"components/ProfileDetailInput\";\r\n\r\nimport { ReadableWorkerJobTypes } from \"constants/workers\";\r\n\r\nconst readableLabels = {\r\n  primaryLanguage: \"Primary Language\",\r\n  additionalLanguages: \"Additional Languages\",\r\n  jobTypes: \"Job Types\",\r\n  distanceToWork: \"Willing to Travel\"\r\n};\r\n\r\nconst buildProps = ({ name, data }: { name: string; data: object }): any => {\r\n  const props: any = {};\r\n\r\n  props[\"label\"] = readableLabels[name];\r\n  props[\"name\"] = name;\r\n\r\n  if (name === \"distanceToWork\") {\r\n    props[\"type\"] = \"number\";\r\n    props[\"value\"] = data[\"distanceToWork\"];\r\n    props[\"unitOfMeasurement\"] = \"Mile(s)\";\r\n    props[\"max\"] = 999;\r\n  } else {\r\n    props[\"forcePopupIcon\"] = false;\r\n    props[\"multiple\"] = true;\r\n    if (name === \"primaryLanguage\" || name === \"additionalLanguages\") {\r\n      if (name === \"primaryLanguage\") {\r\n        props[\"multiple\"] = false;\r\n        props[\"disableClearable\"] = true;\r\n        props[\"forcePopupIcon\"] = true;\r\n        props[\"placeholder\"] = \"Select Primary Language\";\r\n        props[\"options\"] = data[\"primaryLanguageSelections\"];\r\n      } else {\r\n        props[\"options\"] = data[\"additionalLanguageSelections\"];\r\n        props[\"placeholder\"] = \"Add Language\";\r\n      }\r\n      props[\"values\"] = data[name];\r\n    }\r\n    if (name === \"jobTypes\") {\r\n      props[\"options\"] = Object.keys(ReadableWorkerJobTypes).map(\r\n        (key) => ReadableWorkerJobTypes[key]\r\n      );\r\n      props[\"placeholder\"] = \"Add Job Type\";\r\n      props[\"values\"] = data[\"jobTypes\"].map((jobType: any) => ReadableWorkerJobTypes[jobType]);\r\n    }\r\n  }\r\n\r\n  return props;\r\n};\r\n\r\nexport const AdditionalDetailsFields: Array<any> = [\r\n  {\r\n    name: \"primaryLanguage\",\r\n    buildProps,\r\n    Component: ProfileAutocompleteInput\r\n  },\r\n  {\r\n    name: \"additionalLanguages\",\r\n    buildProps,\r\n    Component: ProfileAutocompleteInput\r\n  },\r\n  {\r\n    name: \"jobTypes\",\r\n    buildProps,\r\n    Component: ProfileAutocompleteInput\r\n  },\r\n  {\r\n    name: \"distanceToWork\",\r\n    buildProps,\r\n    Component: ProfileDetailInput\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdditionalDetailsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n  grid-template-areas:\r\n    \"input0 input1\"\r\n    \"input2 input3\";\r\n  min-height: 184px;\r\n  width: 100%;\r\n  margin-top: 24px;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectAdditionalDetailsData } from \"redux/features/workerSlice/selectors\";\r\nimport {\r\n  setWorkerError,\r\n  updateDeleteLanguage,\r\n  updateLanguages,\r\n  updateWorkerPreference\r\n} from \"redux/features/workerSlice\";\r\n\r\nimport { ProfileOnChange } from \"types/workers\";\r\n\r\nimport { noNegativeInput } from \"utils/workerUtils\";\r\n\r\nimport { jobTypeToDB } from \"constants/workers\";\r\nimport { notEmptyArrayValid } from \"constants/validation\";\r\n\r\nimport { AdditionalDetailsFields } from \"./lib\";\r\nimport { AdditionalDetailsContainer } from \"./styledComponents\";\r\n\r\nconst AdditionalDetailsEdit: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const additionalDetails = useAppSelector(selectAdditionalDetailsData);\r\n\r\n  const handleOnChange: ProfileOnChange = async ({ e, name, setError, setInput, newValue }) => {\r\n    if (name === \"distanceToWork\" || name === \"jobTypes\") {\r\n      if (name === \"distanceToWork\") {\r\n        const noNegative = noNegativeInput(e.target.value);\r\n        setInput(noNegative);\r\n        dispatch(updateWorkerPreference({ property: name, value: parseInt(noNegative) }));\r\n      } else {\r\n        setError(\"\");\r\n        dispatch(setWorkerError({ property: name, value: \"\" }));\r\n        setInput(newValue);\r\n        const formatJobTypes = newValue.map((jobType) => jobTypeToDB[jobType]);\r\n        dispatch(updateWorkerPreference({ property: name, value: formatJobTypes }));\r\n      }\r\n    } else {\r\n      if (additionalDetails.primaryLanguage !== \"\" && name === \"additionalLanguages\") {\r\n        const filteredValues = [...newValue].filter(\r\n          (language) => language !== additionalDetails.primaryLanguage\r\n        );\r\n        setInput(filteredValues);\r\n        dispatch(updateLanguages({ property: name, value: filteredValues }));\r\n      } else {\r\n        setInput(newValue);\r\n        dispatch(updateLanguages({ property: name, value: newValue }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnDelete = async ({ option, newValues, name, setError }): Promise<void> => {\r\n    if (name === \"jobTypes\") {\r\n      try {\r\n        await notEmptyArrayValid.validate(newValues);\r\n        const formatJobTypes = newValues.map((jobType) => jobTypeToDB[jobType]);\r\n        dispatch(updateWorkerPreference({ property: name, value: formatJobTypes }));\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(error.message);\r\n        dispatch(setWorkerError({ property: name, value: error.message }));\r\n      }\r\n    } else if (name === \"additionalLanguages\") {\r\n      dispatch(updateDeleteLanguage({ property: name, value: option }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AdditionalDetailsContainer>\r\n      {AdditionalDetailsFields.map(({ name, buildProps, Component }, index) => (\r\n        <Component\r\n          key={`${name}-${index}`}\r\n          {...buildProps({ name, data: additionalDetails })}\r\n          detailNumber={index}\r\n          onChange={handleOnChange}\r\n          onDelete={handleOnDelete}\r\n        />\r\n      ))}\r\n    </AdditionalDetailsContainer>\r\n  );\r\n};\r\n\r\nexport default AdditionalDetailsEdit;\r\n","import AdditionalDetailsEdit from \"./AdditionalDetailsEdit\";\r\n\r\nexport default AdditionalDetailsEdit;\r\n","import styled from \"styled-components\";\r\n\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\nimport textTheme from \"theme/text\";\r\n\r\nexport const SectionButton = styled(Button)`\r\n  && {\r\n    background-color: ${themeColors.background.White};\r\n    text-transform: none;\r\n    padding: 12px 24px;\r\n    color: ${themeColors.Blue};\r\n    ${textTheme.body.small.styledComponent};\r\n    border-color: ${themeColors.Blue};\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    margin-top: 24px;\r\n  }\r\n`;\r\n","import DetailsEditButton from \"./DetailsEditButton\";\r\n\r\nexport default DetailsEditButton;\r\n","import { FC, MouseEventHandler } from \"react\";\r\nimport { SectionButton } from \"./styledComponents\";\r\n\r\ninterface DetailsEditButtonProps {\r\n  title: string;\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst DetailsEditButton: FC<DetailsEditButtonProps> = ({ title, onClick, disabled }) => {\r\n  return (\r\n    <SectionButton disableElevation variant=\"outlined\" onClick={onClick} disabled={disabled}>\r\n      {title}\r\n    </SectionButton>\r\n  );\r\n};\r\n\r\nexport default DetailsEditButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CertificationsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n","import CertificationsEdit from \"./CertificationsEdit\";\r\n\r\nexport default CertificationsEdit;\r\n","import { FC } from \"react\";\r\n\r\nimport DetailsEditButton from \"components/DetailsEditButton\";\r\n\r\nimport { CertificationsContainer } from \"./styledComponents\";\r\n\r\nconst CertificationsEdit: FC = () => {\r\n  return (\r\n    <CertificationsContainer>\r\n      <DetailsEditButton title=\"+ New Certification\" disabled={true} />\r\n    </CertificationsContainer>\r\n  );\r\n};\r\n\r\nexport default CertificationsEdit;\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport { setWorkerError, setWorkerSkills, updateSkillsToDelete } from \"redux/features/workerSlice\";\r\nimport { selectAllSkills, selectWorkerSkillsForInput } from \"redux/features/workerSlice/selectors\";\r\n\r\nimport ProfileAutocompleteInput from \"components/ProfileAutocompleteInput\";\r\n\r\nimport textTheme from \"theme/text\";\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nimport { ProfileOnChange } from \"types/workers\";\r\n\r\nimport { InputContainer } from \"./styledComponents\";\r\nimport { notEmptyArrayValid } from \"constants/validation\";\r\n\r\nconst DetailSkillInput: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const allSkills = useAppSelector(selectAllSkills);\r\n  const { oldWorkerSkills, currentWorkerSkills } = useAppSelector(selectWorkerSkillsForInput);\r\n\r\n  const handleWorkerSkillSelect: ProfileOnChange = async ({ e, setInput, setError, newValue }) => {\r\n    dispatch(setWorkerError({ property: \"skills\", value: \"\" }));\r\n    setError(\"\");\r\n    e.preventDefault();\r\n    setInput(newValue);\r\n    const newSkills = [];\r\n    const formatSkills = [];\r\n    newValue.forEach((value) => {\r\n      const skillIndex = allSkills.findIndex((skill) => skill.label === value);\r\n      formatSkills.push(allSkills[skillIndex]);\r\n      let exists = false;\r\n      for (let i = 0; i < oldWorkerSkills.length; i++) {\r\n        if (oldWorkerSkills[i] === allSkills[skillIndex].skillId) {\r\n          exists = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!exists) {\r\n        newSkills.push(allSkills[skillIndex].skillId);\r\n      }\r\n    });\r\n    dispatch(setWorkerSkills({ workerSkills: formatSkills, skillsToAdd: newSkills }));\r\n  };\r\n\r\n  const handleDelete = async ({ option, newValues, setError }): Promise<void> => {\r\n    try {\r\n      await notEmptyArrayValid.validate(newValues);\r\n      const skillIndex = allSkills.findIndex((skill) => skill.label === option);\r\n      if (skillIndex !== -1) {\r\n        dispatch(updateSkillsToDelete(allSkills[skillIndex].skillId));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n      dispatch(setWorkerError({ property: \"skills\", value: error.message }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <span\r\n        style={{\r\n          color: themeColors.text.Black,\r\n          ...textTheme.headings.h1.inlineStyle,\r\n          userSelect: \"none\",\r\n          marginTop: \"24px\",\r\n          marginBottom: \"24px\"\r\n        }}\r\n      >\r\n        Skills\r\n      </span>\r\n      <ProfileAutocompleteInput\r\n        options={allSkills.map((option) => `${option.label}`)}\r\n        onChange={handleWorkerSkillSelect}\r\n        onDelete={handleDelete}\r\n        values={currentWorkerSkills}\r\n        placeholder=\"Select Skill\"\r\n        multiple\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default DetailSkillInput;\r\n","import DetailSkillInput from \"./DetailSkillInput\";\r\n\r\nexport default DetailSkillInput;\r\n","import { FC, useState } from \"react\";\r\nimport { Autocomplete, useJsApiLoader } from \"@react-google-maps/api\";\r\n\r\nimport { useAppDispatch } from \"hooks/redux\";\r\n\r\nimport { setWorkerAddress, setWorkerError } from \"redux/features/workerSlice\";\r\n\r\nimport ProfileDetailInput from \"components/ProfileDetailInput\";\r\n\r\nimport { breakdownAddressInput } from \"utils/stringUtils\";\r\n\r\nimport { ProfileOnChange } from \"types/workers\";\r\n\r\ninterface IProfileAddressInputProps {\r\n  detailNumber: number;\r\n  label: string;\r\n  name: string;\r\n  value: any;\r\n  validationSchema?: any;\r\n}\r\n\r\nconst googleMapsLibraries: any = [\"places\"];\r\n\r\nconst ProfileAddressInput: FC<IProfileAddressInputProps> = ({\r\n  detailNumber,\r\n  label,\r\n  name,\r\n  value,\r\n  validationSchema\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { isLoaded: mapsLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: process.env.REACT_APP_MAPS_API_KEY,\r\n    libraries: googleMapsLibraries\r\n  });\r\n\r\n  const [addressAutoComplete, setAddressAutoComplete] = useState(null);\r\n  const [error, setError] = useState<any>(\"\");\r\n\r\n  const onAddressLoad = (autocomplete: any) => setAddressAutoComplete(autocomplete);\r\n\r\n  const onPlaceChanged = async () => {\r\n    dispatch(setWorkerError({ property: name, value: \"\" }));\r\n    setError(\"\");\r\n    const payload = breakdownAddressInput(addressAutoComplete.getPlace());\r\n    try {\r\n      if (validationSchema) await validationSchema.validate(payload);\r\n      dispatch(setWorkerAddress(payload));\r\n    } catch (error) {\r\n      setError(error.message);\r\n      dispatch(setWorkerError({ property: name, value: error.message }));\r\n    }\r\n  };\r\n\r\n  const handleOnChange: ProfileOnChange = ({ e, setError, setInput }) => {\r\n    setError(\"\");\r\n    dispatch(setWorkerError({ property: name, value: \"\" }));\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  if (mapsLoaded)\r\n    return (\r\n      <Autocomplete onLoad={onAddressLoad} onPlaceChanged={onPlaceChanged}>\r\n        <ProfileDetailInput\r\n          detailNumber={detailNumber}\r\n          label={label}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleOnChange}\r\n          customError={error}\r\n        />\r\n      </Autocomplete>\r\n    );\r\n\r\n  return null;\r\n};\r\n\r\nexport default ProfileAddressInput;\r\n","import ProfileAddressInput from \"./ProfileAddressInput\";\r\n\r\nexport default ProfileAddressInput;\r\n","import * as Yup from \"yup\";\r\n\r\n// import { validatePhoneNumber } from \"graphql/custom/custom-queries\";\r\n\r\nexport const stringRequiredValidation = (message: string) =>\r\n  Yup.string().required(`${message} is required.`);\r\n\r\n// Unique phone number used to check that current phone number does not already exist in the backend as it was our main method for identifying unique workers\r\n// export const isPhoneUnique: (phoneNumber: string) => Promise<boolean | any> = async (\r\n//   phoneNumber: string\r\n// ) => {\r\n//   const filter = getPhoneNumberFilter(phoneNumber);\r\n\r\n//   const client = currentAuthObject();\r\n\r\n//   const response = await client.query({\r\n//     query: validatePhoneNumber,\r\n//     variables: { filter }\r\n//   });\r\n\r\n//   return response.data.workers.length === 0;\r\n// };\r\n","import ProfileAddressInput from \"components/ProfileAddressInput\";\r\nimport ProfileDetailInput from \"components/ProfileDetailInput\";\r\nimport ProfileAutocompleteInput from \"components/ProfileAutocompleteInput\";\r\n\r\nimport { readablePhoneNumber } from \"utils/workerUtils\";\r\nimport { stringRequiredValidation } from \"utils/validationUtils\";\r\n\r\nimport { ReadableWorkerFields, readableTaxElections } from \"constants/workers\";\r\nimport { phoneNumberValid, formattedAddressValid, emailValid } from \"constants/validation\";\r\n\r\nexport const workerDetailFields: Array<any> = [\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"firstName\"],\r\n      name: \"firstName\",\r\n      validationSchema: stringRequiredValidation(\"First name\")\r\n    },\r\n    value: (worker) => worker.firstName,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"lastName\"],\r\n      name: \"lastName\",\r\n      validationSchema: stringRequiredValidation(\"Last name\")\r\n    },\r\n    value: (worker) => worker.lastName,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"formattedAddress\"],\r\n      name: \"formattedAddress\",\r\n      validationSchema: formattedAddressValid\r\n    },\r\n    value: (worker) => worker.formattedAddress,\r\n    Component: ProfileAddressInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"desiredRate\"],\r\n      name: \"desiredRate\",\r\n      type: \"number\"\r\n    },\r\n    value: (worker) => worker.workerPreference.desiredRate,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"emailAddress\"],\r\n      name: \"emailAddress\",\r\n      validationSchema: emailValid\r\n    },\r\n    value: (worker) => worker.emailAddress,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"phoneNumber\"],\r\n      name: \"phoneNumber\",\r\n      validationSchema: phoneNumberValid\r\n    },\r\n    value: (worker) => readablePhoneNumber(worker.phoneNumber),\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: ReadableWorkerFields[\"taxElection\"],\r\n      name: \"taxElection\",\r\n      options: Object.keys(readableTaxElections).map((key) => readableTaxElections[key]),\r\n      placeholder: \"Select Tax Election\",\r\n      multiple: false,\r\n      disableClearable: true\r\n    },\r\n    value: (worker) => readableTaxElections[worker.taxElection],\r\n    Component: ProfileAutocompleteInput\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const GeneralDetails = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(3, 104px);\r\n  grid-template-areas:\r\n    \"input0 input1 input2\"\r\n    \"input3 input4 input5\"\r\n    \"input 6\";\r\n  min-height: 184px;\r\n  width: 100%;\r\n  margin-top: 24px;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectWorker, selectWorkerLoading } from \"redux/features/workerSlice/selectors\";\r\nimport {\r\n  setWorkerError,\r\n  updateWorkerPreference,\r\n  updateWorkerProperty\r\n} from \"redux/features/workerSlice\";\r\n\r\nimport { ProfileOnChange } from \"types/workers\";\r\n\r\nimport { formatDetailValue } from \"utils/workerUtils\";\r\n\r\nimport { workerDetailFields } from \"./lib\";\r\nimport { GeneralDetails } from \"./styledComponents\";\r\nimport { taxElectionsToDB } from \"constants/workers\";\r\n\r\nconst GeneralDetailsEdit: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const worker = useAppSelector(selectWorker);\r\n  const loading = useAppSelector(selectWorkerLoading);\r\n\r\n  const handleOnChange: ProfileOnChange = async ({\r\n    e,\r\n    name,\r\n    setError,\r\n    setInput,\r\n    validationSchema,\r\n    newValue\r\n  }) => {\r\n    setError(\"\");\r\n    dispatch(setWorkerError({ property: name, value: \"\" }));\r\n    if (name === \"taxElection\") {\r\n      setInput(newValue);\r\n      dispatch(updateWorkerProperty({ property: name, value: taxElectionsToDB[newValue] }));\r\n      return;\r\n    }\r\n    const formatValue = formatDetailValue(name, e.target.value, name === \"desiredRate\");\r\n    setInput(formatValue);\r\n    try {\r\n      if (Boolean(name !== \"desiredRate\")) {\r\n        if (validationSchema) await validationSchema.validate(formatValue);\r\n        dispatch(updateWorkerProperty({ property: e.target.name, value: e.target.value }));\r\n      } else {\r\n        dispatch(updateWorkerPreference({ property: e.target.name, value: parseInt(formatValue) }));\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      dispatch(setWorkerError({ property: name, value: error.message }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GeneralDetails>\r\n      {workerDetailFields.map(({ props, value, Component }, index) => (\r\n        <Component\r\n          key={props.name}\r\n          {...props}\r\n          detailNumber={index}\r\n          disabled={loading || (props.name === \"taxElection\" && worker.taxElection === \"IS_W2\")}\r\n          value={value(worker)}\r\n          values={value(worker)}\r\n          onChange={handleOnChange}\r\n        />\r\n      ))}\r\n    </GeneralDetails>\r\n  );\r\n};\r\n\r\nexport default GeneralDetailsEdit;\r\n","import GeneralDetailsEdit from \"./GeneralDetailsEdit\";\r\n\r\nexport default GeneralDetailsEdit;\r\n","import { FC } from \"react\";\r\nimport { ISvgIconProps } from \"./svgType\";\r\n\r\nexport const TrashIcon: FC<ISvgIconProps> = ({ color }) => (\r\n  <svg width=\"10\" height=\"12\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M9.66658 0.666667H7.33325L6.66658 0H3.33325L2.66659 0.666667H0.333252V2H9.66658M0.999919 10.6667C0.999919 11.0203 1.14039 11.3594 1.39044 11.6095C1.64049 11.8595 1.97963 12 2.33325 12H7.66658C8.02021 12 8.35935 11.8595 8.60939 11.6095C8.85944 11.3594 8.99992 11.0203 8.99992 10.6667V2.66667H0.999919V10.6667Z\"\r\n      fill={color || \"black\"}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default TrashIcon;\r\n","import ProfileDetailInput from \"components/ProfileDetailInput\";\r\n\r\nimport { stringRequiredValidation } from \"utils/validationUtils\";\r\n\r\nexport const workerExperienceFields: Array<any> = [\r\n  {\r\n    props: {\r\n      label: \"Position\",\r\n      name: \"position\",\r\n      validationSchema: stringRequiredValidation(\"Position\")\r\n    },\r\n    value: (experience) => experience.position,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: \"Company\",\r\n      name: \"employer\",\r\n      validationSchema: stringRequiredValidation(\"Company\")\r\n    },\r\n    value: (experience) => experience.employer,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: \"From\",\r\n      name: \"startDate\",\r\n      type: \"date\",\r\n      validationSchema: stringRequiredValidation(\"From date\")\r\n    },\r\n    value: (experience) => experience.startDate,\r\n    Component: ProfileDetailInput\r\n  },\r\n  {\r\n    props: {\r\n      label: \"To\",\r\n      name: \"endDate\",\r\n      type: \"date\",\r\n      validationSchema: stringRequiredValidation(\"To date\")\r\n    },\r\n    min: (experience) => experience.startDate,\r\n    value: (experience) => experience.endDate,\r\n    Component: ProfileDetailInput\r\n  }\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const iconButtonSx = {\r\n  gridArea: \"trashIcon\",\r\n  justifySelf: \"end\",\r\n  alignSelf: \"center\",\r\n  marginTop: \"19px\"\r\n};\r\n\r\nexport const InputContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr) 0.1fr;\r\n  grid-template-areas: \"input0 input1 input2 input3 trashIcon\";\r\n  grid-template-rows: auto;\r\n  width: 100%;\r\n  margin-top: 24px;\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport TrashIcon from \"images/SvgIcons/TrashIcon\";\r\n\r\nimport { useAppDispatch } from \"hooks/redux\";\r\n\r\nimport {\r\n  setWorkerError,\r\n  updateRemoveWorkerExperience,\r\n  updateWorkerExperience\r\n} from \"redux/features/workerSlice\";\r\n\r\nimport { workerExperienceFields } from \"./lib\";\r\nimport { InputContainer, iconButtonSx } from \"./styledComponents\";\r\nimport { ProfileOnChange } from \"types/workers\";\r\n\r\nconst WorkerExperienceInput: FC<{ experience: any; experienceIndex: number }> = ({\r\n  experience,\r\n  experienceIndex\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleOnChange: ProfileOnChange = async ({\r\n    e,\r\n    name,\r\n    setError,\r\n    setInput,\r\n    validationSchema\r\n  }) => {\r\n    setError(\"\");\r\n    dispatch(setWorkerError({ property: \"workerExperience\", value: \"\" }));\r\n    setInput(e.target.value);\r\n    try {\r\n      if (validationSchema) await validationSchema.validate(e.target.value);\r\n      dispatch(\r\n        updateWorkerExperience({\r\n          index: experienceIndex,\r\n          property: name,\r\n          value: e.target.value\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.message);\r\n      dispatch(setWorkerError({ property: \"workerExperience\", value: err.message }));\r\n    }\r\n  };\r\n\r\n  const handleDeleteExperience = () => {\r\n    dispatch(setWorkerError({ property: \"workerExperience\", value: \"\" }));\r\n    dispatch(updateRemoveWorkerExperience(experienceIndex));\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      {workerExperienceFields.map(({ props, value, min, Component }, index) => (\r\n        <Component\r\n          key={props.name}\r\n          {...props}\r\n          detailNumber={index}\r\n          value={value(experience)}\r\n          min={min && min(experience)}\r\n          onChange={handleOnChange}\r\n        />\r\n      ))}\r\n      <IconButton sx={iconButtonSx} onClick={handleDeleteExperience}>\r\n        <TrashIcon height=\"16\" width=\"16\" />\r\n      </IconButton>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerExperienceInput;\r\n","import WorkerExperienceInput from \"./WorkerExperienceInput\";\r\n\r\nexport default WorkerExperienceInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WorkerExperienceContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n","import AdditionalDetailsEdit from \"components/AdditionalDetailsEdit\";\r\nimport CertificationsEdit from \"components/CertificationsEdit\";\r\nimport DetailSkillInput from \"components/DetailSkillInput\";\r\nimport GeneralDetailsEdit from \"components/GeneralDetailsEdit\";\r\nimport WorkerExperienceEdit from \"components/WorkerExperienceEdit\";\r\n\r\ninterface IProfileEditSector {\r\n  title: string;\r\n  components: any[];\r\n}\r\n\r\nexport const ProfileEditSectors: IProfileEditSector[] = [\r\n  {\r\n    title: \"General Details\",\r\n    components: [GeneralDetailsEdit, DetailSkillInput]\r\n  },\r\n  {\r\n    title: \"Work Experience\",\r\n    components: [WorkerExperienceEdit]\r\n  },\r\n  {\r\n    title: \"Certifications\",\r\n    components: [CertificationsEdit]\r\n  },\r\n  {\r\n    title: \"Languages & Additional Details\",\r\n    components: [AdditionalDetailsEdit]\r\n  }\r\n];\r\n","import { FC } from \"react\";\r\n\r\nimport WorkerExperienceInput from \"components/WorkerExperienceInput\";\r\nimport DetailsEditButton from \"components/DetailsEditButton\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport { selectWorkExperience, selectWorkerId } from \"redux/features/workerSlice/selectors\";\r\nimport { updateAddWorkerExperience } from \"redux/features/workerSlice\";\r\n\r\nimport { WorkerExperienceContainer } from \"./styledComponents\";\r\n\r\nconst WorkerExperienceEdit: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const workerId = useAppSelector(selectWorkerId);\r\n  const experiences = useAppSelector(selectWorkExperience);\r\n\r\n  const handleAddNewExperience = () => {\r\n    dispatch(\r\n      updateAddWorkerExperience({\r\n        workerId,\r\n        employer: \"\",\r\n        position: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        new: true\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <WorkerExperienceContainer>\r\n      {experiences.map((experience, index) => (\r\n        <WorkerExperienceInput\r\n          key={`experience-${index}`}\r\n          experience={experience}\r\n          experienceIndex={index}\r\n        />\r\n      ))}\r\n      <DetailsEditButton title=\"+ New Position\" onClick={handleAddNewExperience} />\r\n    </WorkerExperienceContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerExperienceEdit;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nexport const MainSector = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 25px 75px;\r\n  background-color: ${themeColors.background.Primary};\r\n`;\r\n","import ProfileEdit from \"./ProfileEdit\";\r\n\r\nexport default ProfileEdit;\r\n","import { FC, useState } from \"react\";\r\n\r\nimport ProfileEditSection from \"components/ProfileEditSection\";\r\n\r\nimport { ProfileEditSectors } from \"./lib\";\r\nimport { MainSector } from \"./styledComponents\";\r\n\r\nconst ProfileEdit: FC = () => {\r\n  const [openNumber, setOpenNumber] = useState<number | null>(0);\r\n\r\n  return (\r\n    <MainSector>\r\n      {ProfileEditSectors.map(({ title, components }, i) => (\r\n        <ProfileEditSection\r\n          key={title}\r\n          title={title}\r\n          detailNumber={i}\r\n          openNumber={openNumber}\r\n          setOpenNumber={setOpenNumber}\r\n        >\r\n          {components.map((Component, index) => (\r\n            <Component key={`${title}-${index}`} />\r\n          ))}\r\n        </ProfileEditSection>\r\n      ))}\r\n    </MainSector>\r\n  );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import styled from \"styled-components\";\r\nimport { themeColors } from \"theme/colors\";\r\n\r\nexport const WorkerProfileContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  min-height: 100%;\r\n  width: 100%;\r\n  background-color: ${themeColors.background.Primary};\r\n`;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { sortBy } from \"lodash\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport { getLanguages, getWorkerDetails, listAllTrades } from \"graphql/custom/custom-queries\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"hooks/redux\";\r\n\r\nimport { setAllLanguages, setAllSkills, setInitialWorker } from \"redux/features/workerSlice\";\r\nimport { selectWorkerEditMode, selectWorkerLoading } from \"redux/features/workerSlice/selectors\";\r\n\r\nimport SectionHeader from \"components/SectionHeader\";\r\nimport ProfileMain from \"components/ProfileMain\";\r\nimport ProfileEdit from \"components/ProfileEdit\";\r\n\r\nimport { WorkerProfileContainer } from \"./styledComponents\";\r\n\r\nconst WorkerProfile: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  /* Will typically grab worker ID from params to fetch worker profile */\r\n  // const params = useParams();\r\n\r\n  const workerEditMode = useAppSelector(selectWorkerEditMode);\r\n  const workerLoading = useAppSelector(selectWorkerLoading);\r\n\r\n  /*\r\n    Queries here to show logic and example of production but commented out as this is a test with no connection to DB\r\n  */\r\n\r\n  // const { loading: workerLoading } = useQuery(getWorkerDetails, {\r\n  //   variables: { id: params?.employeeId },\r\n  //   onError: () => {\r\n  //     toast.error(\"Failed to load worker.\");\r\n  //   },\r\n  //   onCompleted: (data) => {\r\n  //     dispatch(setInitialWorker(data.worker));\r\n  //   }\r\n  // });\r\n\r\n  // useQuery(listAllTrades, {\r\n  //   onCompleted: (data) => {\r\n  //     // When connected to DB, trade/skill data is formatted and sent to Redux here\r\n  //     const tradeResults: Trade[] = data.trades as Trade[];\r\n  //     const allTrades = sortBy(tradeResults, \"tradeName\");\r\n  //     const tradeList = allTrades.reduce((acc, trade) => {\r\n  //       const skills = trade.skills;\r\n  //       const tradeSkills = skills.reduce((acc, skill) => {\r\n  //         return [\r\n  //           ...acc,\r\n  //           {\r\n  //             label: `${trade.tradeName} - ${skill.skillName}`,\r\n  //             skillId: skill.id,\r\n  //             skillName: skill.skillName,\r\n  //             tradeId: trade.id,\r\n  //             tradeName: trade.tradeName\r\n  //           }\r\n  //         ];\r\n  //       }, []);\r\n  //       return [...acc, ...tradeSkills];\r\n  //     }, []);\r\n  //     dispatch(setAllSkills(tradeList));\r\n  //   },\r\n  //   fetchPolicy: \"cache-and-network\"\r\n  // });\r\n\r\n  // useQuery(getLanguages, {\r\n  //   onCompleted: (data) => {\r\n  //     // When completed language data is formatted and sent to Redux\r\n  //     const allLanguages = data.languages.reduce((acc, next) => {\r\n  //       acc.push({ languageId: next.id, languageName: next.languageName });\r\n  //       return acc;\r\n  //     }, []);\r\n  //     dispatch(setAllLanguages(allLanguages));\r\n  //   }\r\n  // });\r\n\r\n  // Test data for sample profile\r\n  useEffect(() => {\r\n    const testTrades = [\r\n      {\r\n        label: `Painting - Painting Manager`,\r\n        skillId: \"testId1\",\r\n        skillName: \"Painting Manager\",\r\n        tradeId: \"testTradeId1\",\r\n        tradeName: \"Painting\"\r\n      },\r\n      {\r\n        label: `Construction - Framer`,\r\n        skillId: \"testId2\",\r\n        skillName: \"Framer\",\r\n        tradeId: \"testTradeId2\",\r\n        tradeName: \"Construction\"\r\n      }\r\n    ];\r\n    dispatch(setAllSkills(testTrades));\r\n    const testLanguages = [\r\n      {\r\n        languageId: \"testLanguageId1\",\r\n        languageName: \"English\"\r\n      },\r\n      {\r\n        languageId: \"testLanguageId2\",\r\n        languageName: \"Spanish\"\r\n      },\r\n      {\r\n        languageId: \"testLanguageId3\",\r\n        languageName: \"Chinese\"\r\n      }\r\n    ];\r\n    dispatch(setAllLanguages(testLanguages));\r\n    const testWorker = {\r\n      id: \"test\",\r\n      firstName: \"Josh\",\r\n      lastName: \"Trinidad\",\r\n      formattedAddress: \"5228 Lexmark Cir SW, Atlanta, GA\",\r\n      emailAddress: \"akatoirotech@gmail.com\",\r\n      phoneNumber: \"6783085760\",\r\n      taxElection: \"IS_W2\",\r\n      workerSkills: [\r\n        {\r\n          id: \"testWorkerSkillsId1\",\r\n          skill: {\r\n            id: \"testSkillId1\",\r\n            skillName: \"Painter\",\r\n            trade: {\r\n              id: \"testTradeId1\",\r\n              tradeName: \"Painting\"\r\n            }\r\n          },\r\n          yearsInTrade: 5\r\n        },\r\n        {\r\n          id: \"testWorkerSkillsId2\",\r\n          skill: {\r\n            id: \"testSkillId2\",\r\n            skillName: \"Framer\",\r\n            trade: {\r\n              id: \"testTradeId2\",\r\n              tradeName: \"Construction\"\r\n            }\r\n          },\r\n          yearsInTrade: 5\r\n        }\r\n      ],\r\n      workerHistories: [\r\n        {\r\n          workerId: \"test\",\r\n          id: \"testWorkerHistoriesId\",\r\n          job: {\r\n            id: \"testJobId\",\r\n            closeDate: \"09-10-2023\",\r\n            jobName: \"Construction Job\"\r\n          },\r\n          staffingRequirement: {\r\n            endDate: \"09-09-2023\",\r\n            skill: {\r\n              skillName: \"Framer\"\r\n            },\r\n            jobCandidates: [\r\n              {\r\n                status: \"ACTIVE\",\r\n                activeJobStartDate: \"08-30-2023\",\r\n                workerId: \"test\"\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ],\r\n      workerLanguages: [\r\n        {\r\n          id: \"testWorkerLanguagesId1\",\r\n          isPrimary: true,\r\n          language: {\r\n            id: \"testLanguageId1\",\r\n            languageName: \"English\"\r\n          }\r\n        },\r\n        {\r\n          id: \"testWorkerLanguagesId2\",\r\n          isPrimary: false,\r\n          language: {\r\n            id: \"testLanguageId2\",\r\n            languageName: \"Spanish\"\r\n          }\r\n        }\r\n      ],\r\n      workerExperiences: [\r\n        {\r\n          id: \"testWorkerExperiencesId1\",\r\n          employer: \"LaborWorx\",\r\n          position: \"Senior Fullstack Engineer\",\r\n          startDate: \"08-08-2022\",\r\n          endDate: \"08-25-2023\",\r\n          workerId: \"test\"\r\n        }\r\n      ],\r\n      workerPreference: {\r\n        id: \"testWorkerPreferencesId1\",\r\n        jobTypes: [\"PERM\", \"CONTRACT\"],\r\n        desiredRate: 75,\r\n        distanceToWork: 25\r\n      }\r\n    };\r\n    dispatch(setInitialWorker(testWorker));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WorkerProfileContainer>\r\n      <SectionHeader loading={workerLoading} />\r\n      {workerEditMode ? <ProfileEdit /> : <ProfileMain loading={workerLoading} />}\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick={true}\r\n        rtl={false}\r\n        theme=\"light\"\r\n        pauseOnHover={false}\r\n        pauseOnFocusLoss={false}\r\n        role=\"Worker Profile Toast Container\"\r\n      />\r\n    </WorkerProfileContainer>\r\n  );\r\n};\r\n\r\nexport default WorkerProfile;\r\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","selectWorkerSliceReducer","state","worker","selectWorkerLoading","createSelector","loading","selectWorkerErrors","errors","selectWorker","selectWorkerId","id","selectWorkerName","firstName","lastName","selectWorkHistoryTab","workHistoryTab","selectWorkHistories","workHistory","selectWorkExperience","workerExperiences","selectWorkerAdditionalDetailsDisplay","formattedJobTypes","formattedDistanceToWork","workerPreference","jobTypes","forEach","jobType","push","ReadableWorkerJobTypes","distanceToWork","label","value","join","selectWorkerLanguages","workerLanguages","formattedLanguages","workerLanguage","languageName","isPrimary","sort","formatLanguages","selectWorkerEditMode","workerEditMode","selectAllSkills","workerId","updates","workerUpdates","preferenceId","skillsToAdd","skillsToDelete","workerExperiencesToDelete","allSkills","selectWorkerTrades","workerTrades","selectWorkerSkillsForInput","oldWorkerSkills","workerSkills","map","skill","currentWorkerSkills","selectAdditionalDetailsData","primaryLanguage","additionalLanguages","primaryLanguageSelections","languageSelections","additionalLanguageSelections","filter","language","color","width","height","viewBox","fill","xmlns","d","HeaderButton","styled","Button","$workerEditMode","themeColors","textTheme","HeaderContainer","HeaderLeftSector","Subtitle","HeaderRightSector","dispatch","workerName","workerLoading","workerErrors","style","display","justifyContent","alignItems","Recruiter","marginLeft","fontWeight","Skeleton","variant","disableElevation","onClick","setWorkerLoading","userSelect","updateWorkerDetailsStart","setWorkerEditMode","disabled","isEmpty","Object","values","tabSx","marginRight","textTransform","WorkHistoryTab","tab","workerHistoryTab","sx","setWorkHistoryTab","memoizedWorkHistoryTab","memo","WorkHistoryContainer","TabContainer","WorkHistoryCardContainer","workerHistoryTabs","CircularProgress","size","personalDetailCss","PersonalDetailItem","marginTop","DetailIcon","PersonalDetailInfo","Icon","SkillBadgeContainer","stroke","WorkerDetailsDisplay","ReadableWorkerFields","MoneyIcon","workerKey","desiredRate","EmailIcon","emailAddress","PhoneIcon","readablePhoneNumber","phoneNumber","RequestPage","readableTaxElections","taxElection","workerDetailsCss","WorkerDetailsContainer","MainDetails","MainDetailTitle","MainDetailSubtitle","AddressSection","Section","SectionHeader","AddressBackground","SkillSection","trades","renderPersonalDetail","detail","AccountCircle","trade","tradeName","formattedAddress","workerSkill","skillName","renderPersonalDetailSkeletons","_","i","renderSkillBadgeSkeletons","borderRadius","WorkerExperienceItemContainer","last","LeftSection","employer","position","startDate","endDate","Date","toLocaleString","month","year","WorkerGenericItemContainer","detailTitle","detailSubtitle","flexDefault","WorkerExperienceContainer","SectionSubHeader","ItemsSection","workerAdditionalDetails","length","workerExperience","LeftSector","StatusRoleContainer","ActiveStatusBadge","isActive","SubtitleOne","SubtitleTwo","jobName","jobLength","jobId","navigate","useNavigate","opacity","backgroundColor","px","py","workHistories","MainSector","HeaderButtonSx","padding","isOpen","Header","CustomAccordion","children","title","detailNumber","openNumber","setOpenNumber","open","AutocompleteInput","CustomSelectLabel","autocompleteSx","minHeight","border","outline","outlineOffset","chipSx","textFieldSx","input","name","options","onChange","onDelete","placeholder","validationSchema","multiple","disableClearable","forcePopupIcon","filterOptions","useState","setInput","error","setError","handleOnDelete","option","prev","newValues","Array","isArray","item","Autocomplete","slotProps","paper","filterSelectedOptions","renderTags","index","Chip","fullWidth","e","reason","newValue","renderInput","params","TextField","Boolean","DetailInput","CustomInputLabel","CustomInput","currency","CustomAdornment","UnitOfMeasurement","ProfileDetailInput","type","customError","unitOfMeasurement","min","max","htmlFor","maxLength","undefined","readableLabels","buildProps","data","props","keys","key","AdditionalDetailsFields","Component","ProfileAutocompleteInput","AdditionalDetailsContainer","additionalDetails","handleOnChange","noNegative","noNegativeInput","target","updateWorkerPreference","property","parseInt","setWorkerError","formatJobTypes","jobTypeToDB","filteredValues","updateLanguages","notEmptyArrayValid","console","message","updateDeleteLanguage","SectionButton","CertificationsContainer","InputContainer","handleWorkerSkillSelect","preventDefault","newSkills","formatSkills","skillIndex","findIndex","exists","skillId","setWorkerSkills","handleDelete","updateSkillsToDelete","marginBottom","googleMapsLibraries","mapsLoaded","useJsApiLoader","googleMapsApiKey","process","libraries","isLoaded","addressAutoComplete","setAddressAutoComplete","onPlaceChanged","payload","breakdownAddressInput","getPlace","validate","setWorkerAddress","onLoad","autocomplete","stringRequiredValidation","Yup","required","workerDetailFields","formattedAddressValid","ProfileAddressInput","emailValid","phoneNumberValid","GeneralDetails","updateWorkerProperty","taxElectionsToDB","formatValue","formatDetailValue","workerExperienceFields","experience","iconButtonSx","gridArea","justifySelf","alignSelf","experienceIndex","updateWorkerExperience","IconButton","updateRemoveWorkerExperience","ProfileEditSectors","components","GeneralDetailsEdit","DetailSkillInput","experiences","updateAddWorkerExperience","new","CertificationsEdit","AdditionalDetailsEdit","WorkerProfileContainer","useEffect","setAllSkills","tradeId","setAllLanguages","languageId","setInitialWorker","yearsInTrade","workerHistories","job","closeDate","staffingRequirement","jobCandidates","status","activeJobStartDate","hideProgressBar","newestOnTop","closeOnClick","rtl","theme","pauseOnHover","pauseOnFocusLoss","role"],"sourceRoot":""}